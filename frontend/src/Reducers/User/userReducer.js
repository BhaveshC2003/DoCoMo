import { createReducer } from "@reduxjs/toolkit";

const user = createReducer({},{
    REGISTER_USER_REQUEST:(state)=>{
        return{
            success:false,
            loading:true,
            error:null,
            isAuthenticated:false
        }
    },
    REGISTER_USER_SUCCESS:(state,action)=>{
        return{
            success:true,
            loading:false,
            error:null,
            user:action.payload,
            isAuthenticated:true
        }
    },
    REGISTER_USER_FAIL:(state,action)=>{
        return{
            success:false,
            loading:false,
            error:action.payload,
            isAuthenticated:false
        }
    },
    LOGIN_USER_REQUEST:(state,action)=>{
        return{
            loading:true,
            error:null,
            isAuthenticated:false,
            user:null
        }
    },
    LOGIN_USER_SUCCESS:(state,action)=>{
        return{
            loading:false,
            error:null,
            isAuthenticated:true,
            user:action.payload
        }
    },
    LOGIN_USER_FAIL:(state,action)=>{
        return{
            loading:false,
            error:action.payload,
            isAuthenticated:false,
            user:null
        }
    },
    GET_USER_REQUEST:(state,action)=>{
        return{
            loading:true,
            isAuthenticated:false,
            error:null,
            user:null
        }
    },
    GET_USER_SUCCESS:(state,action)=>{
        return{
            loading:false,
            isAuthenticated:true,
            error:null,
            user:action.payload
        }
    },
    GET_USER_FAIL:(state,action)=>{
        return{
            loading:false,
            isAuthenticated:false,
            error:action.payload,
            user:null
        }
    },
    LOGOUT_USER_REQUEST:(state,action)=>{
        return{
            ...state,
            loading:true
        }
    },
    LOGOUT_USER_SUCCESS:(state,action)=>{
        return{
            loading:false,
            isAuthenticated:false,
            error:null,
            user:null
        }
    },
    LOGOUT_USER_FAIL:(state,action)=>{
        return{
            ...state,
            loading:false,
            error:action.payload
        }
    },
    RESET_SUCCESS:(state,action)=>{
        return{
            ...state,
            success:false
        }
    }
})

export default user